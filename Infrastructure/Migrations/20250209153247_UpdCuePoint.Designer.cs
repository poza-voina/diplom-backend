// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250209153247_UpdCuePoint")]
    partial class UpdCuePoint
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.CuePoint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationDateTime");

                    b.Property<string>("CuePointType")
                        .HasColumnType("text")
                        .HasColumnName("CuePointType");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("Latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("Longitude");

                    b.Property<long>("RouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("RouteId");

                    b.Property<int>("SortIndex")
                        .HasColumnType("integer")
                        .HasColumnName("SortIndex");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("CuePoints");
                });

            modelBuilder.Entity("Core.Entities.Route", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<float>("BaseCost")
                        .HasColumnType("real")
                        .HasColumnName("BaseCost");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationDateTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("boolean")
                        .HasColumnName("IsHidden");

                    b.Property<int>("MaxCountPeople")
                        .HasColumnType("integer")
                        .HasColumnName("MaxCountPeople");

                    b.Property<int>("MinCountPeople")
                        .HasColumnType("integer")
                        .HasColumnName("MinCountPeople");

                    b.Property<string>("RouteTypes")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("RouteTypes");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Core.Entities.RouteExample", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationDateTime");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EndDateTime");

                    b.Property<long>("RouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("RouteId");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StartDateTime");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("RouteExample");
                });

            modelBuilder.Entity("Core.Entities.RouteExample", b =>
                {
                    b.HasOne("Core.Entities.Route", "Route")
                        .WithMany("RouteExamples")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Core.Entities.Route", b =>
                {
                    b.Navigation("RouteExamples");
                });
#pragma warning restore 612, 618
        }
    }
}
