@page "/admin/route/{RouteId:long}/map"
@inject IJSRuntime JS
@inject NavigationManager Navigation
@rendermode RenderMode.InteractiveServer
@using Application.Components.Components.Admin
@using Application.Components.Components.BaseComponents
@using Application.Components.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

<header>
	<AdminMenuComponent />
</header>

<main id="admin-menu-editRoute">
	<div class="route-map-container">
		<MapComponent @ref=Map OnInitialized=UpdateMap/>
	</div>

	<div class="" id="map-menu">
		<div id="map-menu-content">
			@foreach (var mapMenuItem in CuePointsTruePosition)
			{
				<div class="map-menu-item route-card">
					<div class="@(ToggleBuffer.IsOn(mapMenuItem.SortIndex) ? "": "hidden-element") header">
						<div>
							<button @onclick="() => MoveHigher(mapMenuItem.SortIndex)" class="btn btn-sm buttons-move">
								<img src="icons/arrow-up-short.svg" alt="Поместить выше" />
							</button>
							<button @onclick="() => MoveLower(mapMenuItem.SortIndex)" class="btn btn-sm buttons-move">
								<img src="icons/arrow-down-short.svg" alt="Поместить ниже" />
							</button>
						</div>

						<div>
							<button @onclick="() => Expand(mapMenuItem.SortIndex)" class="btn btn-sm buttons-move">
								@if (ToggleBuffer.IsOn(mapMenuItem.SortIndex))
								{
									<img src="icons/chevron-up.svg" alt="Свернуть" />
								}
								else
								{
									<img src="icons/chevron-down.svg" alt="Развернуть" />
								}
							</button>
							<button @onclick="() => Remove(mapMenuItem.SortIndex)" class="btn btn-sm buttons-move">
								<img src="icons/trash.svg" alt="Удалить" />
							</button>
						</div>
					</div>

					<div class="main">
						<div class="@(ToggleBuffer.IsOn(mapMenuItem.SortIndex) ? "hidden-element": "") left">
							<button @onclick="() => MoveHigher(mapMenuItem.SortIndex)" class="btn btn-sm buttons-move">
								<img src="icons/arrow-up-short.svg" alt="Поместить выше" />
							</button>
							<button @onclick="() => MoveLower(mapMenuItem.SortIndex)" class="btn btn-sm buttons-move">
								<img src="icons/arrow-down-short.svg" alt="Поместить ниже" />
							</button>
						</div>

						<div class="center">
							<div class="content">
								<div class="cuepoint-title">@mapMenuItem.Title</div>
								<div class="@(ToggleBuffer.IsOn(mapMenuItem.SortIndex) ? "": "hidden-element")">
									<div>@((MarkupString)mapMenuItem.Description)</div>
								</div>
							</div>
						</div>

						<div class="@(ToggleBuffer.IsOn(mapMenuItem.SortIndex) ? "hidden-element": "") right">
							<button @onclick="() => Expand(mapMenuItem.SortIndex)" class="btn btn-sm buttons-move">
								@if (ToggleBuffer.IsOn(mapMenuItem.SortIndex))
								{
									<img src="icons/chevron-up.svg" alt="Свернуть" />
								}
								else
								{
									<img src="icons/chevron-down.svg" alt="Развернуть" />
								}
							</button>
							<button @onclick="() => Remove(mapMenuItem.SortIndex)" class="btn btn-sm buttons-move">
								<img src="icons/trash.svg" alt="Удалить" />
							</button>
						</div>
					</div>

					<div class="footer">
						@if(mapMenuItem.Latitude is null || mapMenuItem is null) {
							<img src="icons/exclamation-circle.svg" @onclick=HandleShowMenuForAddingPointToMap/>
						}
						<GeoCoderComponent @ref=GeoCoderMenu ResultEvent="(x) => SetPointToMap(x, mapMenuItem)"/>
					</div>
				</div>
			}
		</div>
		<div>
			<button id="btn-add-new-route" @onclick=HandleShowModalCreateNewCuePoint class="btn btn-sm">Добавить точку маршрута</button>
			<button id="btn-add-new-route" @onclick=HandleSave class="btn btn-sm">Сохранить</button>
		</div>
	</div>

	<Modal @ref=ModalWindow>
		<AddNewCuePointForm OnSave=GetNewCuePoint />
	</Modal>
</main>