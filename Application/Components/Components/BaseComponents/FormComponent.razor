@typeparam TResult

<div class="@(IsHidden ? "hidden-element" : "")">
	<div class="fields">
		@foreach (var item in Fields.Value)
		{
			<div class="field">
				<div>
					@foreach(var message in item.ErrorMessages) {
						<div>@message</div>
					}
				</div>
				<label class="field-label">@GetDisplayName(item.Info)</label>
				
				@* <input class="field-input" type="text" value="@item.Info.GetValue(ResultData)" @onchange="(e) => InputOnChange(e, item.Info)" ValueExpression="@(() => item.Info.GetValue(ResultData))" /> *@
				@* <input class="field-input" type="text" @bind=item.Value @onchange=" (e) => InputOnChange(e, item.Info)" /> *@

				<DynamicInput TValue="string" Value="@(item.Info.GetValue(ResultData)?.ToString())" 
                      ValueExpression="@(() => item.Info.GetValue(ResultData).ToString())" 
                      @onchange="(e) => InputOnChange(e, item.Info)" />
			</div>
		}
	</div>

	<div>
		<button @onclick=Save>Сохранить</button>
	</div>
</div>