@using Application.Components.Components.BaseComponents
@using Application.Components.Components.Forms
@using Application.Dto
<div class="routes-menu-container">
	<div class="left">
		<div class="sorting-buttons-container" id="sorting-button">
			<div class="sorting-buttons-toggle-container">
				<button class="btn btn-sm sorting-buttons-toggle">
					Без сортировки
				</button>
			</div>
			<div class="sorting-buttons-menu hidden">
				@foreach (SortingTypes item in Enum.GetValues(typeof(SortingTypes)))
				{
					<button class="btn btn-sm sorting-buttons-item" @onclick="() => SetSortingType(item)">@SortingTypesHelper.GetMessage(item)</button>
				}
			</div>
		</div>
		<div class="show-hide-container">
			<div class="show-hidden"><label>Показывать скрытые</label><InputCheckbox @bind-Value=Values.IsShowHidden @onclick=HandleShowHidden /></div>
			<div class="show-show"><label>Показывать видимые</label><InputCheckbox @bind-Value=Values.IsShowVisible @onclick=HandleShowVisible /></div>
		</div>	
	</div>

	<div class="right">
		<div class="menu-container-item"><input type="text" class="form-control form-control-sm"/></div>
		<div class="menu-container-item"><button class="btn btn-sm" @onclick=OpenModal><img src="/icons/plus.svg" /></button></div>
	</div>


	<Modal @ref=ModalWindow>
		<AddNewRouteForm OnSave="SaveNewRoute"></AddNewRouteForm>
	</Modal>
</div>